# The playbook installs and configures midPointdev

- hosts: "{{ host }}"
  become: root
  vars_files:
    - files/vars.yml
  tasks:

##### Linux ######

  - name: misc packages
    yum:
      name:
        - wget
        - unzip
        - python3-libsemanage
      state: latest

  - name: hosts file
    lineinfile:
      dest: /etc/hosts
      line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }}"

  - name: open firewall to http(s)
    firewalld: 
      service: "{{ item }}"
      permanent: true
      state: enabled
      immediate: yes
    with_items:
    - http
    - https

##### Java #####

  - name: install open-jdk
    yum:
      name:
        - "{{ openjdk_package }}"
      state: present

##### Apache #####

  - name: httpd packages
    yum:
      name:
        - httpd
        - mod_ssl
      state: latest
    tags:
    - httpd
    notify:
    - httpd service restart

# This will stop SELinux from preventing access to self signed certs
  - name: apply new SELinux to files
    command: restorecon -iR /etc/pki/tls/

# This will stop SELinux from flagging Apache
  - name: selinux CGI sockets
    seboolean: name=httpd_can_network_connect state=yes persistent=yes

  - name: copy midpoint.conf (Apache vhost config)
    template:
      src: files/httpd.conf
      dest: /etc/httpd/conf.d/midpoint.conf
    notify:
    - httpd service restart
    
  - name: httpd service
    service: name=httpd state=started enabled=true
    tags:
    - httpd

##### midPoint #####

  - name: creates service account
    user:
      name: "{{ service_account }}"
      comment: midpoint service account
      shell: /sbin/nologin
      system: yes
    when: service_account != 'root'

  - name: Extract & Download midpoint
    unarchive:
      src: "{{ midpoint_url }}"
      dest: /opt/
      remote_src: yes
      creates: "/opt/midpoint-{{ midpoint_version }}"
      owner: "{{ service_account }}"
      group: "{{ service_account }}"

  - name: Create config.xml to configure the database repository
    template:
      src: files/db_config.conf
      dest: "/opt/midpoint-{{ midpoint_version }}/var/config.xml"
      force: yes

# If you are connecting an Oracle DB then you will need the ojdbc file from Oracle    
#  - name: Copy ojdbc8.jar to midpoint/var
#    copy:
#      src: files/ojdbc8.jar
#      dest: "/opt/midpoint-{{ midpoint_version }}/var/lib/ojdbc8.jar"

# If you are using a custom schema .xsd file you can move it as shown below    
#  - name: Copy customSchema.xsd to midpoint/var/schema/
#    copy:
#      src: files/customSchema.xsd
#      dest: "/opt/midpoint-{{ midpoint_version }}/var/schema/customSchema.xsd"

  - name: Create systemd service file from template
    template:
      src: files/midpoint.service
      dest: /etc/systemd/system/midpoint.service
     
  - name: midpoint service
    service: name=midpoint.service state=started enabled=true
  
##### Handlers #####
  
  handlers:
    - name: httpd service restart
      service: name=httpd state=restarted
